use crate::error::{ParseError, Result};
use std::fmt::Debug;

#[derive(Debug, Clone, Copy, PartialEq)]
pub enum ContainerTag {
    AcquiringData,
    BusinessAddress,
    ClassContract,
    CompanyData,
    Depositor,
    Document,
    ExistingSeriesAndClassesContracts,
    FiledBy,
    FiledFor,
    Filer,
    FilingValues,
    FormerCompany,
    FormerName,
    Issuer,
    MailAddress,
    Merger,
    MergerSeriesAndClassesContracts,
    NewClassesContracts,
    NewSeries,
    NewSeriesAndClassesContracts,
    OwnerData,
    ReportingOwner,
    Securitizer,
    Series,
    SeriesAndClassesContractsData,
    SubjectCompany,
    Submission,
    TargetData,
}

impl ContainerTag {
    pub fn parse(tag: &str) -> Result<ContainerTag> {
        Ok(match tag {
            "ACQUIRING-DATA" => ContainerTag::AcquiringData,
            "BUSINESS-ADDRESS" => ContainerTag::BusinessAddress,
            "CLASS-CONTRACT" => ContainerTag::ClassContract,
            "COMPANY-DATA" => ContainerTag::CompanyData,
            "DEPOSITOR" => ContainerTag::Depositor,
            "DOCUMENT" => ContainerTag::Document,
            "EXISTING-SERIES-AND-CLASSES-CONTRACTS" => {
                ContainerTag::ExistingSeriesAndClassesContracts
            }
            "FILED-BY" => ContainerTag::FiledBy,
            "FILED-FOR" => ContainerTag::FiledFor,
            "FILER" => ContainerTag::Filer,
            "FILING-VALUES" => ContainerTag::FilingValues,
            "FORMER-COMPANY" => ContainerTag::FormerCompany,
            "FORMER-NAME" => ContainerTag::FormerName,
            "ISSUER" => ContainerTag::Issuer,
            "MAIL-ADDRESS" => ContainerTag::MailAddress,
            "MERGER" => ContainerTag::Merger,
            "MERGER-SERIES-AND-CLASSES-CONTRACTS" => ContainerTag::MergerSeriesAndClassesContracts,
            "NEW-CLASSES-CONTRACTS" => ContainerTag::NewClassesContracts,
            "NEW-SERIES" => ContainerTag::NewSeries,
            "NEW-SERIES-AND-CLASSES-CONTRACTS" => ContainerTag::NewSeriesAndClassesContracts,
            "OWNER-DATA" => ContainerTag::OwnerData,
            "REPORTING-OWNER" => ContainerTag::ReportingOwner,
            "SECURITIZER" => ContainerTag::Securitizer,
            "SERIES" => ContainerTag::Series,
            "SERIES-AND-CLASSES-CONTRACTS-DATA" => ContainerTag::SeriesAndClassesContractsData,
            "SUBJECT-COMPANY" => ContainerTag::SubjectCompany,
            "SUBMISSION" => ContainerTag::Submission,
            "TARGET-DATA" => ContainerTag::TargetData,

            _ => return Err(ParseError::InvalidContainerTag(tag.to_string())),
        })
    }
}

#[derive(Debug, Clone, Copy, PartialEq)]
pub enum ValueTag {
    AbsAssetClass,
    AbsRule,
    AccessionNumber,
    Act,
    ActionDate,
    AssignedSic,
    Category,
    Cik,
    City,
    ClassContractId,
    ClassContractName,
    ClassContractTickerSymbol,
    ConformedName,
    ConfirmingCopy,
    Correction,
    DateChanged,
    DateOfFilingDateChange,
    Deletion,
    DepositorCik,
    DepositorFileNumber,
    Description,
    EffectivenessDate,
    FileNumber,
    FiledPursuantToGeneralInstructionA2,
    Filename,
    FilingDate,
    FilmNumber,
    FiscalYearEnd,
    Flawed,
    FormType,
    FormerConformedName,
    GroupMembers,
    IrsNumber,
    IsFilerANewRegistrant,
    IsFilerAWellKnownSeasonedIssuer,
    IsFund24F2Eligible,
    IssuingEntityCik,
    IssuingEntityName,
    Items,
    MaIIndividual,
    NoAnnualActivity,
    NoQuarterlyActivity,
    OwnerCik,
    Paper,
    Period,
    PeriodStart,
    Phone,
    PublicDocumentCount,
    PublicReferenceAcc,
    PublicRelDate,
    PreviousAccessionNumber,
    PrivateToPublic,
    ReceivedDate,
    Reference462B,
    References429,
    RegisteredEntity,
    Relationship,
    SecuritizerCik,
    SecuritizerFileNumber,
    Sequence,
    SeriesId,
    SeriesName,
    SponsorCik,
    Sros,
    State,
    StateOfInforporation,
    Street1,
    Street2,
    Timestamp,
    Type,
    Zip,
}

impl ValueTag {
    pub fn parse(tag: &str) -> Result<ValueTag> {
        Ok(match tag {
            "ABS-ASSET-CLASS" => ValueTag::AbsAssetClass,
            "ABS-RULE" => ValueTag::AbsRule,
            "ACCESSION-NUMBER" => ValueTag::AccessionNumber,
            "ACT" => ValueTag::Act,
            "ACTION-DATE" => ValueTag::ActionDate,
            "ASSIGNED-SIC" => ValueTag::AssignedSic,
            "CATEGORY" => ValueTag::Category,
            "CIK" => ValueTag::Cik,
            "CITY" => ValueTag::City,
            "CLASS-CONTRACT-ID" => ValueTag::ClassContractId,
            "CLASS-CONTRACT-NAME" => ValueTag::ClassContractName,
            "CLASS-CONTRACT-TICKER-SYMBOL" => ValueTag::ClassContractTickerSymbol,
            "CONFORMED-NAME" => ValueTag::ConformedName,
            "CONFIRMING-COPY" => ValueTag::ConfirmingCopy,
            "CORRECTION" => ValueTag::Correction,
            "DATE-CHANGED" => ValueTag::DateChanged,
            "DATE-OF-FILING-DATE-CHANGE" => ValueTag::DateOfFilingDateChange,
            "DELETION" => ValueTag::Deletion,
            "DEPOSITOR-CIK" => ValueTag::DepositorCik,
            "DEPOSITOR-FILE-NUMBER" => ValueTag::DepositorFileNumber,
            "DESCRIPTION" => ValueTag::Description,
            "EFFECTIVENESS-DATE" => ValueTag::EffectivenessDate,
            "FILE-NUMBER" => ValueTag::FileNumber,
            "FILED-PURSUANT-TO-GENERAL-INSTRUCTION-A2" => {
                ValueTag::FiledPursuantToGeneralInstructionA2
            }
            "FILENAME" => ValueTag::Filename,
            "FILING-DATE" => ValueTag::FilingDate,
            "FILM-NUMBER" => ValueTag::FilmNumber,
            "FISCAL-YEAR-END" => ValueTag::FiscalYearEnd,
            "FLAWED" => ValueTag::Flawed,
            "FORM-TYPE" => ValueTag::FormType,
            "FORMER-CONFORMED-NAME" => ValueTag::FormerConformedName,
            "GROUP-MEMBERS" => ValueTag::GroupMembers,
            "IRS-NUMBER" => ValueTag::IrsNumber,
            "IS-FILER-A-NEW-REGISTRANT" => ValueTag::IsFilerANewRegistrant,
            "IS-FILER-A-WELL-KNOWN-SEASONED-ISSUER" => ValueTag::IsFilerAWellKnownSeasonedIssuer,
            "IS-FUND-24F2-ELIGIBLE" => ValueTag::IsFund24F2Eligible,
            "ISSUING-ENTITY-CIK" => ValueTag::IssuingEntityCik,
            "ISSUING-ENTITY-NAME" => ValueTag::IssuingEntityName,
            "ITEMS" => ValueTag::Items,
            "MA-I_INDIVIDUAL" => ValueTag::MaIIndividual,
            "NO-ANNUAL-ACTIVITY" => ValueTag::NoAnnualActivity,
            "NO-QUARTERLY-ACTIVITY" => ValueTag::NoQuarterlyActivity,
            "OWNER-CIK" => ValueTag::OwnerCik,
            "PAPER" => ValueTag::Paper,
            "PERIOD" => ValueTag::Period,
            "PERIOD-START" => ValueTag::PeriodStart,
            "PHONE" => ValueTag::Phone,
            "PUBLIC-DOCUMENT-COUNT" => ValueTag::PublicDocumentCount,
            "PUBLIC-REFERENCE-ACC" => ValueTag::PublicReferenceAcc,
            "PUBLIC-REL-DATE" => ValueTag::PublicRelDate,
            "PREVIOUS-ACCESSION-NUMBER" => ValueTag::PreviousAccessionNumber,
            "PRIVATE-TO-PUBLIC" => ValueTag::PrivateToPublic,
            "RECEIVED-DATE" => ValueTag::ReceivedDate,
            "REFERENCE-462B" => ValueTag::Reference462B,
            "REFERENCES-429" => ValueTag::References429,
            "REGISTERED-ENTITY" => ValueTag::RegisteredEntity,
            "RELATIONSHIP" => ValueTag::Relationship,
            "SECURITIZER-CIK" => ValueTag::SecuritizerCik,
            "SECURITIZER-FILE-NUMBER" => ValueTag::SecuritizerFileNumber,
            "SEQUENCE" => ValueTag::Sequence,
            "SERIES-ID" => ValueTag::SeriesId,
            "SERIES-NAME" => ValueTag::SeriesName,
            "SPONSOR-CIK" => ValueTag::SponsorCik,
            "SROS" => ValueTag::Sros,
            "STATE" => ValueTag::State,
            "STATE-OF-INCORPORATION" => ValueTag::StateOfInforporation,
            "STREET1" => ValueTag::Street1,
            "STREET2" => ValueTag::Street2,
            "TIMESTAMP" => ValueTag::Timestamp,
            "TYPE" => ValueTag::Type,
            "ZIP" => ValueTag::Zip,
            _ => return Err(ParseError::InvalidValueTag(tag.to_string())),
        })
    }
}
